{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\chatbot\\\\chatbot\\\\src\\\\Pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getMessages, sendMessage } from '../API/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  senderId,\n  receiverId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [content, setContent] = useState('');\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const response = await getMessages(senderId, receiverId);\n      setMessages(response.data);\n    };\n    fetchMessages();\n  }, [senderId, receiverId]);\n  const handleSend = async () => {\n    const message = {\n      senderId,\n      receiverId,\n      content\n    };\n    await sendMessage(message);\n    setContent('');\n    const response = await getMessages(senderId, receiverId);\n    setMessages(response.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message.content\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"kxdeoU2eDfslVC5RqhgWnVyiaTo=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","getMessages","sendMessage","jsxDEV","_jsxDEV","Chat","senderId","receiverId","_s","messages","setMessages","content","setContent","fetchMessages","response","data","handleSend","message","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/chatbot/chatbot/src/Pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getMessages, sendMessage } from '../API/API';\r\n\r\nconst Chat = ({ senderId, receiverId }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [content, setContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      const response = await getMessages(senderId, receiverId);\r\n      setMessages(response.data);\r\n    };\r\n    fetchMessages();\r\n  }, [senderId, receiverId]);\r\n\r\n  const handleSend = async () => {\r\n    const message = { senderId, receiverId, content };\r\n    await sendMessage(message);\r\n    setContent('');\r\n    const response = await getMessages(senderId, receiverId);\r\n    setMessages(response.data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {messages.map((message) => (\r\n          <div key={message.id}>{message.content}</div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n      />\r\n      <button onClick={handleSend}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,IAAI,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMb,WAAW,CAACK,QAAQ,EAAEC,UAAU,CAAC;MACxDG,WAAW,CAACI,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC;IACDF,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACP,QAAQ,EAAEC,UAAU,CAAC,CAAC;EAE1B,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,OAAO,GAAG;MAAEX,QAAQ;MAAEC,UAAU;MAAEI;IAAQ,CAAC;IACjD,MAAMT,WAAW,CAACe,OAAO,CAAC;IAC1BL,UAAU,CAAC,EAAE,CAAC;IACd,MAAME,QAAQ,GAAG,MAAMb,WAAW,CAACK,QAAQ,EAAEC,UAAU,CAAC;IACxDG,WAAW,CAACI,QAAQ,CAACC,IAAI,CAAC;EAC5B,CAAC;EAED,oBACEX,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EACGT,QAAQ,CAACU,GAAG,CAAEF,OAAO,iBACpBb,OAAA;QAAAc,QAAA,EAAuBD,OAAO,CAACN;MAAO,GAA5BM,OAAO,CAACG,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwB,CAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,OAAQ;MACfgB,QAAQ,EAAGC,CAAC,IAAKhB,UAAU,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFpB,OAAA;MAAQ0B,OAAO,EAAEd,UAAW;MAAAE,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAnCIH,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}